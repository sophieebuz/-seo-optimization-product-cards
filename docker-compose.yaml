version: "3.8"

services:

  seo-postgres-v2:
    container_name: seo-postgres-v2
    image: postgres:16.2
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "53321:5432"
    volumes:
      - type: bind
        source: ./data/db_data
        target: /var/lib/postgresql/data
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U postgres
      interval: 1s
      timeout: 1s
      retries: 10
      start_period: 10s

  seo-optimization-v2:
    container_name: seo-optimization-v2
    build: .
    ports:
      - "8898:8000"
    depends_on:
      seo-postgres-v2:
        condition: service_healthy
    healthcheck:
      test:
        - CMD-SHELL
        - curl http://0.0.0.0:8000/
      interval: 30s
      timeout: 1s
      retries: 5
      start_period: 5s

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.13-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test:
        - CMD-SHELL
        - rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 1s
      retries: 5
      start_period: 5s

  celery-worker:
    container_name: celery-worker
    build: .
    command: poetry run celery -A api.main.celery worker -l info -Q seo-classification -P eventlet
    volumes:
      - type: bind
        source: ./data/celery_data
        target: /app
    depends_on:
      seo-optimization-v2:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: poetry run celery -b amqp://guest:guest@rabbitmq:5672 inspect ping
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 5s

  flower:
    container_name: flower
    build: .
    command: poetry run celery -A api.main.celery flower --port=5555
    ports:
      - 55555:5555
    depends_on:
      seo-optimization-v2:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      celery-worker:
        condition: service_healthy

#  nginx:
#    container_name: nginx
#    image: nginx:1.24.0
#    ports:
#      - "60124:80"
#    volumes:
#      - type: bind
#        source: ./api/nginx_config/nginx
#        target: /etc/nginx
#      - type: bind
#        source: ./api/nginx_config/log
#        target: /log
#      - type: bind
#        source: ./api/static
#        target: /var/www/static
#    depends_on:
#      seo-optimization-v2:
#        condition: service_healthy
#      rabbitmq:
#        condition: service_healthy
#      celery-worker:
#        condition: service_healthy

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.51.1
    ports:
      - 9090:9090
    volumes:
      - type: bind
        source: ./monitoring/prometheus.yml
        target: /etc/prometheus/prometheus.yml
    healthcheck:
      test:
        - CMD-SHELL
        - wget http://localhost:9090
      interval: 1s
      timeout: 1s
      retries: 10
      start_period: 10s

  grafana:
    container_name: grafana
    image: grafana/grafana:10.1.9
    ports:
      - 3000:3000
    volumes:
      - type: bind
        source: ./data/grafana
        target: /var/lib/grafana

  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter:v1.7.0
    ports:
      - 9100:9100
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro

  postgresql-exporter:
    container_name: postgresql-exporter
    image: prometheuscommunity/postgres-exporter:v0.15.0
    ports:
      - 9187:9187
    environment:
      DATA_SOURCE_NAME: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@seo-postgres-v2:5432/${POSTGRES_DB}?sslmode=disable"
    depends_on:
      seo-postgres-v2:
        condition: service_healthy
      prometheus:
        condition: service_healthy
